Time resolution is 1 ps
----------------------
-- Simulation Start --
----------------------
Cycle 1: Loading weight column 7
  Weights: [x, x, x, x, x, x, x, x]
Reading weight matrix from weight.dat (decimal format)
Reading activation matrix from activation.dat (decimal format)
Weight and activation matrices loaded successfully

Weight Matrix:
Row 0:   1   2   3   4   5   6   7   8 
Row 1:   9  10  11  12  13  14  15  16 
Row 2:  17  18  19  20  21  22  23  24 
Row 3:  25  26  27  28  29  30  31  32 
Row 4:  33  34  35  36  37  38  39  40 
Row 5:  41  42  43  44  45  46  47  48 
Row 6:  49  50  51  52  53  54  55  56 
Row 7:  57  58  59  60  61  62  63  64 

Activation Matrix:
Row 0:   1   2   3   4   5   6   7   8 
Row 1:   9  10  11  12  13  14  15  16 
Row 2:  17  18  19  20  21  22  23  24 
Row 3:  25  26  27  28  29  30  31  32 
Row 4:  33  34  35  36  37  38  39  40 
Row 5:  41  42  43  44  45  46  47  48 
Row 6:  49  50  51  52  53  54  55  56 
Row 7:  57  58  59  60  61  62  63  64 
Cycle 1: Loading weight column 7
  Weights: [8, 16, 24, 32, 40, 48, 56, 64]
Reset completed at time 30000
Cycle 2: Loading weight column 6
  Weights: [7, 15, 23, 31, 39, 47, 55, 63]
Cycle 3: Loading weight column 5
  Weights: [6, 14, 22, 30, 38, 46, 54, 62]
Cycle 4: Loading weight column 4
  Weights: [5, 13, 21, 29, 37, 45, 53, 61]
Cycle 5: Loading weight column 3
  Weights: [4, 12, 20, 28, 36, 44, 52, 60]
Cycle 6: Loading weight column 2
  Weights: [3, 11, 19, 27, 35, 43, 51, 59]
Cycle 7: Loading weight column 1
  Weights: [2, 10, 18, 26, 34, 42, 50, 58]
Cycle 8: Loading final weight column and first activation
  Final Weights: [1, 9, 17, 25, 33, 41, 49, 57]
  First activation: activation_in[0] = 1
Cycle 9: Loading activation diagonal 1
  activation_in[0] <= activation_matrix[0][1] = 2
  activation_in[1] <= activation_matrix[1][0] = 9
Cycle 10: Loading activation diagonal 2
  activation_in[0] <= activation_matrix[0][2] = 3
  activation_in[1] <= activation_matrix[1][1] = 10
  activation_in[2] <= activation_matrix[2][0] = 17
Cycle 11: Loading activation diagonal 3
  activation_in[0] <= activation_matrix[0][3] = 4
  activation_in[1] <= activation_matrix[1][2] = 11
  activation_in[2] <= activation_matrix[2][1] = 18
  activation_in[3] <= activation_matrix[3][0] = 25
Cycle 12: Loading activation diagonal 4
  activation_in[0] <= activation_matrix[0][4] = 5
  activation_in[1] <= activation_matrix[1][3] = 12
  activation_in[2] <= activation_matrix[2][2] = 19
  activation_in[3] <= activation_matrix[3][1] = 26
  activation_in[4] <= activation_matrix[4][0] = 33
Cycle 13: Loading activation diagonal 5
  activation_in[0] <= activation_matrix[0][5] = 6
  activation_in[1] <= activation_matrix[1][4] = 13
  activation_in[2] <= activation_matrix[2][3] = 20
  activation_in[3] <= activation_matrix[3][2] = 27
  activation_in[4] <= activation_matrix[4][1] = 34
  activation_in[5] <= activation_matrix[5][0] = 41
Cycle 14: Loading activation diagonal 6
  activation_in[0] <= activation_matrix[0][6] = 7
  activation_in[1] <= activation_matrix[1][5] = 14
  activation_in[2] <= activation_matrix[2][4] = 21
  activation_in[3] <= activation_matrix[3][3] = 28
  activation_in[4] <= activation_matrix[4][2] = 35
  activation_in[5] <= activation_matrix[5][1] = 42
  activation_in[6] <= activation_matrix[6][0] = 49
Cycle 15: Loading activation diagonal 7
  activation_in[0] <= activation_matrix[0][7] = 8
  activation_in[1] <= activation_matrix[1][6] = 15
  activation_in[2] <= activation_matrix[2][5] = 22
  activation_in[3] <= activation_matrix[3][4] = 29
  activation_in[4] <= activation_matrix[4][3] = 36
  activation_in[5] <= activation_matrix[5][2] = 43
  activation_in[6] <= activation_matrix[6][1] = 50
  activation_in[7] <= activation_matrix[7][0] = 57
Cycle 16: Loading activation diagonal 8
  activation_in[1] <= activation_matrix[1][7] = 16
  activation_in[2] <= activation_matrix[2][6] = 23
  activation_in[3] <= activation_matrix[3][5] = 30
  activation_in[4] <= activation_matrix[4][4] = 37
  activation_in[5] <= activation_matrix[5][3] = 44
  activation_in[6] <= activation_matrix[6][2] = 51
  activation_in[7] <= activation_matrix[7][1] = 58
Cycle 17: Loading activation diagonal 9
  activation_in[2] <= activation_matrix[2][7] = 24
  activation_in[3] <= activation_matrix[3][6] = 31
  activation_in[4] <= activation_matrix[4][5] = 38
  activation_in[5] <= activation_matrix[5][4] = 45
  activation_in[6] <= activation_matrix[6][3] = 52
  activation_in[7] <= activation_matrix[7][2] = 59
Cycle 17: partial_sum_out = [1380, 0, 0, 0, 0, 0, 0, 0]
  -> Captured result[0][0] = 1380 from partial_sum_out[0]
Cycle 18: Loading activation diagonal 10
  activation_in[3] <= activation_matrix[3][7] = 32
  activation_in[4] <= activation_matrix[4][6] = 39
  activation_in[5] <= activation_matrix[5][5] = 46
  activation_in[6] <= activation_matrix[6][4] = 53
  activation_in[7] <= activation_matrix[7][3] = 60
Cycle 18: partial_sum_out = [1416, 3236, 0, 0, 0, 0, 0, 0]
  -> Captured result[0][1] = 1416 from partial_sum_out[0]
  -> Captured result[1][0] = 3236 from partial_sum_out[1]
Cycle 19: Loading activation diagonal 11
  activation_in[4] <= activation_matrix[4][7] = 40
  activation_in[5] <= activation_matrix[5][6] = 47
  activation_in[6] <= activation_matrix[6][5] = 54
  activation_in[7] <= activation_matrix[7][4] = 61
Cycle 19: partial_sum_out = [1452, 3336, 5092, 0, 0, 0, 0, 0]
  -> Captured result[0][2] = 1452 from partial_sum_out[0]
  -> Captured result[1][1] = 3336 from partial_sum_out[1]
  -> Captured result[2][0] = 5092 from partial_sum_out[2]
Cycle 20: Loading activation diagonal 12
  activation_in[5] <= activation_matrix[5][7] = 48
  activation_in[6] <= activation_matrix[6][6] = 55
  activation_in[7] <= activation_matrix[7][5] = 62
Cycle 20: partial_sum_out = [1488, 3436, 5256, 6948, 0, 0, 0, 0]
  -> Captured result[0][3] = 1488 from partial_sum_out[0]
  -> Captured result[1][2] = 3436 from partial_sum_out[1]
  -> Captured result[2][1] = 5256 from partial_sum_out[2]
  -> Captured result[3][0] = 6948 from partial_sum_out[3]
Cycle 21: Loading activation diagonal 13
  activation_in[6] <= activation_matrix[6][7] = 56
  activation_in[7] <= activation_matrix[7][6] = 63
Cycle 21: partial_sum_out = [1524, 3536, 5420, 7176, 8804, 0, 0, 0]
  -> Captured result[0][4] = 1524 from partial_sum_out[0]
  -> Captured result[1][3] = 3536 from partial_sum_out[1]
  -> Captured result[2][2] = 5420 from partial_sum_out[2]
  -> Captured result[3][1] = 7176 from partial_sum_out[3]
  -> Captured result[4][0] = 8804 from partial_sum_out[4]
Cycle 22: Loading activation diagonal 14
  activation_in[7] <= activation_matrix[7][7] = 64
Cycle 22: partial_sum_out = [1560, 3636, 5584, 7404, 9096, 10660, 0, 0]
  -> Captured result[0][5] = 1560 from partial_sum_out[0]
  -> Captured result[1][4] = 3636 from partial_sum_out[1]
  -> Captured result[2][3] = 5584 from partial_sum_out[2]
  -> Captured result[3][2] = 7404 from partial_sum_out[3]
  -> Captured result[4][1] = 9096 from partial_sum_out[4]
  -> Captured result[5][0] = 10660 from partial_sum_out[5]
Cycle 23: Waiting for computation completion
Cycle 23: partial_sum_out = [1596, 3736, 5748, 7632, 9388, 11016, 12516, 0]
  -> Captured result[0][6] = 1596 from partial_sum_out[0]
  -> Captured result[1][5] = 3736 from partial_sum_out[1]
  -> Captured result[2][4] = 5748 from partial_sum_out[2]
  -> Captured result[3][3] = 7632 from partial_sum_out[3]
  -> Captured result[4][2] = 9388 from partial_sum_out[4]
  -> Captured result[5][1] = 11016 from partial_sum_out[5]
  -> Captured result[6][0] = 12516 from partial_sum_out[6]
Cycle 24: Waiting for computation completion
Cycle 24: partial_sum_out = [1632, 3836, 5912, 7860, 9680, 11372, 12936, 14372]
  -> Captured result[0][7] = 1632 from partial_sum_out[0]
  -> Captured result[1][6] = 3836 from partial_sum_out[1]
  -> Captured result[2][5] = 5912 from partial_sum_out[2]
  -> Captured result[3][4] = 7860 from partial_sum_out[3]
  -> Captured result[4][3] = 9680 from partial_sum_out[4]
  -> Captured result[5][2] = 11372 from partial_sum_out[5]
  -> Captured result[6][1] = 12936 from partial_sum_out[6]
  -> Captured result[7][0] = 14372 from partial_sum_out[7]
Cycle 25: Waiting for computation completion
Cycle 25: partial_sum_out = [0, 3936, 6076, 8088, 9972, 11728, 13356, 14856]
  -> Captured result[1][7] = 3936 from partial_sum_out[1]
  -> Captured result[2][6] = 6076 from partial_sum_out[2]
  -> Captured result[3][5] = 8088 from partial_sum_out[3]
  -> Captured result[4][4] = 9972 from partial_sum_out[4]
  -> Captured result[5][3] = 11728 from partial_sum_out[5]
  -> Captured result[6][2] = 13356 from partial_sum_out[6]
  -> Captured result[7][1] = 14856 from partial_sum_out[7]
Cycle 26: Waiting for computation completion
Cycle 26: partial_sum_out = [0, 0, 6240, 8316, 10264, 12084, 13776, 15340]
  -> Captured result[2][7] = 6240 from partial_sum_out[2]
  -> Captured result[3][6] = 8316 from partial_sum_out[3]
  -> Captured result[4][5] = 10264 from partial_sum_out[4]
  -> Captured result[5][4] = 12084 from partial_sum_out[5]
  -> Captured result[6][3] = 13776 from partial_sum_out[6]
  -> Captured result[7][2] = 15340 from partial_sum_out[7]
Cycle 27: Waiting for computation completion
Cycle 27: partial_sum_out = [0, 0, 0, 8544, 10556, 12440, 14196, 15824]
  -> Captured result[3][7] = 8544 from partial_sum_out[3]
  -> Captured result[4][6] = 10556 from partial_sum_out[4]
  -> Captured result[5][5] = 12440 from partial_sum_out[5]
  -> Captured result[6][4] = 14196 from partial_sum_out[6]
  -> Captured result[7][3] = 15824 from partial_sum_out[7]
Cycle 28: Waiting for computation completion
Cycle 28: partial_sum_out = [0, 0, 0, 0, 10848, 12796, 14616, 16308]
  -> Captured result[4][7] = 10848 from partial_sum_out[4]
  -> Captured result[5][6] = 12796 from partial_sum_out[5]
  -> Captured result[6][5] = 14616 from partial_sum_out[6]
  -> Captured result[7][4] = 16308 from partial_sum_out[7]
Cycle 29: Waiting for computation completion
Cycle 29: partial_sum_out = [0, 0, 0, 0, 0, 13152, 15036, 16792]
  -> Captured result[5][7] = 13152 from partial_sum_out[5]
  -> Captured result[6][6] = 15036 from partial_sum_out[6]
  -> Captured result[7][5] = 16792 from partial_sum_out[7]
Cycle 30: Waiting for computation completion
Cycle 30: partial_sum_out = [0, 0, 0, 0, 0, 0, 15456, 17276]
  -> Captured result[6][7] = 15456 from partial_sum_out[6]
  -> Captured result[7][6] = 17276 from partial_sum_out[7]
Cycle 31: Waiting for computation completion
Cycle 31: partial_sum_out = [0, 0, 0, 0, 0, 0, 0, 17760]
  -> Captured result[7][7] = 17760 from partial_sum_out[7]
Cycle 32: Simulation completed

Result Matrix:
Row 0:     1380     1416     1452     1488     1524     1560     1596     1632 
Row 1:     3236     3336     3436     3536     3636     3736     3836     3936 
Row 2:     5092     5256     5420     5584     5748     5912     6076     6240 
Row 3:     6948     7176     7404     7632     7860     8088     8316     8544 
Row 4:     8804     9096     9388     9680     9972    10264    10556    10848 
Row 5:    10660    11016    11372    11728    12084    12440    12796    13152 
Row 6:    12516    12936    13356    13776    14196    14616    15036    15456 
Row 7:    14372    14856    15340    15824    16308    16792    17276    17760 
----------------------
-- Simulation End --
----------------------
$finish called at time : 335 ns : File "C:/Project/STRAIT/Array_8x8_tb.v" Line 291
